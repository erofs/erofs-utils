#!/bin/sh
# SPDX-License-Identifier: GPL-2.0+
#
# check the hard-link functionality
#
seq=`basename $0`
seqres=$RESULT_DIR/$(echo $0 | awk '{print $((NF-1))"/"$NF}' FS="/")

# get standard environment, filters and checks
. "${srcdir}/common/rc"

cleanup()
{
	cd /
	rm -rf $tmp.*
}

_require_root
_require_erofs

# remove previous $seqres.full before test
rm -f $seqres.full

# real QA test starts here
echo "QA output created by $seq"

if [ -z $SCRATCH_DEV ]; then
	SCRATCH_DEV=$tmp/erofs_$seq.img
	rm -f SCRATCH_DEV
fi

localdir="$tmp/$seq"
rm -rf $localdir

mkdir -p $localdir/d1
mkdir -p $localdir/d2/d3/d4 $localdir/d2/d5
touch $localdir/d1/a
ln $localdir/d1/a $localdir/d2/a
ln $localdir/d1/a $localdir/d2/d3/a

_scratch_mkfs $localdir >> $seqres.full 2>&1 || _fail "failed to mkfs"
_scratch_mount 2>>$seqres.full

# check i_nlink count is expected
[ `stat -c %h $SCRATCH_MNT` -eq 4 -a \
  `stat -c %h $SCRATCH_MNT/d1` -eq 2 -a \
  `stat -c %h $SCRATCH_MNT/d2` -eq 4 -a \
  `stat -c %h $SCRATCH_MNT/d2/d3` -eq 3 -a \
  `stat -c %h $SCRATCH_MNT/d1/a` -eq 3 ] || \
	_fail "-> check i_nlink FAILED"

_scratch_unmount

echo Silence is golden
status=0
exit 0
